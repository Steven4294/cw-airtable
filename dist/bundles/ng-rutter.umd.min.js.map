{"version":3,"sources":["ng://ng-rutter/src/app/modules/ng-rutter/ng-rutter.service.ts","ng://ng-rutter/src/app/modules/ng-rutter/ng-rutter.component.ts","ng://ng-rutter/src/app/modules/ng-rutter/ng-rutter.module.ts"],"names":["NgRutterServiceOptions","Injectable","args","providedIn","NgRutterService","options","this","prototype","loadRutter","onSuccess","onLoad","onExit","Rutter","create","publicKey","PUBLIC_API_KEY","publicToken","open","setup","_this","Promise","resolve","reject","get","url","NgRutterComponent","rutterService","EventEmitter","load","emit","ngOnInit","Component","selector","template","styles","Input","Output","NgRutterModule","forRoot","ngModule","providers","provide","FOR_ROOT_OPTIONS_TOKEN","useValue","useFactory","provideMyServiceOptions","deps","NgModule","imports","CommonModule","declarations","exports","InjectionToken","serviceOptions"],"mappings":"iWACA,IAAAA,EAAA,4CASiC,8BAJhCC,EAAAA,WAAUC,KAAA,CAAC,CACXC,WAAY,gHANb,gBA0CC,SAAAC,EAAaC,YAxBP,+CAyBLC,KAAKD,QAAUA,SAvBhBD,EAAAG,UAAAC,WAAA,SAAWC,EAAWC,EAAQC,GAERC,OAAOC,OAAO,CAClCC,UAAWR,KAAKD,QAAQU,eACxBN,UAAW,SAAUO,GACpBP,EAAUO,IAEXN,OAAQA,IACRC,OAAQA,MAGMM,QAGhBb,EAAAG,UAAAW,MAAA,WAAA,IAAAC,EAAAb,KACC,OAAO,IAAIc,QAAQ,SAACC,EAASC,GAC5BC,EAAAA,IAAIJ,EAAKK,IAAK,WACbH,6BAzBHpB,EAAAA,WAAUC,KAAA,CAAC,CACXC,WAAY,oDA6BUH,0HC3CvByB,EAAA,WAoCE,SAAAA,EAAoBC,GAAApB,KAAAoB,cAAAA,YAtBJ,8BACW,kBACV,sBAEK,IAAIC,EAAAA,yBACP,IAAIA,EAAAA,yBACJ,IAAIA,EAAAA,oBAEvBF,EAAAlB,UAAAqB,KAAA,WAAA,IAAAT,EAAAb,KACEA,KAAKoB,cAAclB,WAAW,SAACQ,GAC7BG,EAAKV,UAAUoB,KAAKb,IACnB,WACDG,EAAKT,OAAOmB,QACX,WACDV,EAAKR,OAAOkB,UAIhBJ,EAAAlB,UAAAuB,SAAA,WACExB,KAAKoB,cAAcR,6BA9BtBa,EAAAA,UAAS7B,KAAA,CAAC,CACT8B,SAAU,YACVC,SAAU,+HAKVC,OAAQ,CAAC,8bATF9B,mCAaN+B,EAAAA,+BACAA,EAAAA,qBACAA,EAAAA,yBAEAC,EAAAA,uBACAA,EAAAA,uBACAA,EAAAA,YApBH,GCAAC,EAAA,gCAuBSA,EAAAC,QAAP,SAAgBjC,GAEhB,MAAA,CACCkC,SAAUF,EACVG,UAAW,CACV,CACCC,QAASC,EACTC,SAAUtC,GAEX,CACCoC,QAASzC,EACT4C,WAAYC,EACZC,KAAM,CAAEJ,2BA5BZK,EAAAA,SAAQ7C,KAAA,CAAC,CACR8C,QAAS,CACPC,EAAAA,cAEFT,UAAW,CACZpC,GAEC8C,aAAc,CACZzB,GAEF0B,QAAS,CACV1B,SAlBD,GAgDWiB,EAAyB,IAAIU,EAAAA,eAA+B,sCAEvE,SAAAP,EAAyCxC,GAExC,IAAIgD,EAAiB,IAAIrD,EAQzB,OAPKK,GAEsC,iBAA7BA,EAAsB,iBAClCgD,EAAetC,eAAiBV,EAAQU,gBAI1C","sourcesContent":["// Import the core angular services.\nimport { Injectable } from \"@angular/core\";\nimport { get } from 'scriptjs';\n\ndeclare var Rutter: any;\n\n@Injectable({\n\tprovidedIn: \"root\"\n})\nexport class NgRutterServiceOptions {\n\tpublic PUBLIC_API_KEY: string = '';\n}\n\n@Injectable({\n\tprovidedIn: \"root\"\n})\nexport class NgRutterService {\n \n\tpublic options: NgRutterServiceOptions;\n\turl = 'https://unpkg.com/@rutter/rutter-link@latest';\n\n\tloadRutter(onSuccess, onLoad, onExit) {\n\n\t\tvar rutterInstance = Rutter.create({\n\t\t\tpublicKey: this.options.PUBLIC_API_KEY,\n\t\t\tonSuccess: function (publicToken) {\n\t\t\t\tonSuccess(publicToken)\n\t\t\t},\n\t\t\tonLoad: onLoad(),\n\t\t\tonExit: onExit(),\n\t\t})\n\t\t\t\n\t\trutterInstance.open();\n\t}\n\n\tsetup() {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tget(this.url, () => {\n\t\t\t\tresolve()\n\t\t\t});\n\t\t})\n\t}\n\t\n\tconstructor( options: NgRutterServiceOptions ) {\n\t\tthis.options = options;\n\t}\n}","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { NgRutterService } from './ng-rutter.service';\n\n@Component({\n  selector: 'ng-rutter',\n  template: `<div class=\"btn\" (click)=\"load()\" \n[style.background-color]=\"backgroundColor\"\n[style.color]=\"color\"\n\n> {{ text }} </div>`,\n  styles: [`.btn{display:inline-block;font-weight:400;text-align:center;white-space:nowrap;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border:1px solid transparent;padding:.375rem .75rem;font-size:1rem;line-height:1.5;border-radius:.25rem;position:relative;color:#fff;background-color:#007bff;font-family:Lato,sans-serif!important;cursor:pointer}`]\n})\n\nexport class NgRutterComponent implements OnInit {\n  @Input() text = 'Log in';\n  @Input() backgroundColor = '#000';\n  @Input() color = '#FFF';\n\n  @Output() onSuccess = new EventEmitter<string>();\n  @Output() onLoad = new EventEmitter();\n  @Output() onExit = new EventEmitter();\n\n  load() {\n    this.rutterService.loadRutter((publicToken) => {\n      this.onSuccess.emit(publicToken)\n    }, () => {\n      this.onLoad.emit()\n    }, () => {\n      this.onExit.emit()\n    });\n  }\n  \n  ngOnInit() {\n    this.rutterService.setup()\n  }\n\n  constructor(private rutterService: NgRutterService) {}\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgRutterComponent } from './ng-rutter.component';\nimport { InjectionToken } from \"@angular/core\";\nimport { NgRutterServiceOptions, NgRutterService } from './ng-rutter.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  providers: [\n\tNgRutterService\n],\n  declarations: [\n    NgRutterComponent\n  ],\n  exports: [\n\tNgRutterComponent,\n  ]\n})\nexport class NgRutterModule {\n\n  static forRoot( options?: ModuleOptions ) : ModuleWithProviders {\n \n\t\treturn({\n\t\t\tngModule: NgRutterModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: FOR_ROOT_OPTIONS_TOKEN,\n\t\t\t\t\tuseValue: options\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tprovide: NgRutterServiceOptions,\n\t\t\t\t\tuseFactory: provideMyServiceOptions,\n\t\t\t\t\tdeps: [ FOR_ROOT_OPTIONS_TOKEN ]\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n }\n\n\n// I define the shape of the optional configuration data passed to the forRoot() method.\nexport interface ModuleOptions {\n  PUBLIC_API_KEY?: string;\n}\n\nexport var FOR_ROOT_OPTIONS_TOKEN = new InjectionToken<ModuleOptions>( \"forRoot() MyService configuration.\" );\n\nexport function provideMyServiceOptions( options?: ModuleOptions ) : NgRutterServiceOptions {\n \n\tvar serviceOptions = new NgRutterServiceOptions();\n\tif ( options ) {\n \n\t\tif ( typeof( options.PUBLIC_API_KEY ) === \"string\" ) {\n\t\t\tserviceOptions.PUBLIC_API_KEY = options.PUBLIC_API_KEY;\n\t\t}\n\t}\n \n\treturn( serviceOptions );\n}"]}