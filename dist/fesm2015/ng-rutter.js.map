{"version":3,"file":"ng-rutter.js.map","sources":["ng://ng-rutter/src/app/modules/ng-rutter/ng-rutter.service.ts","ng://ng-rutter/src/app/modules/ng-rutter/ng-rutter.component.ts","ng://ng-rutter/src/app/modules/ng-rutter/ng-rutter.module.ts"],"sourcesContent":["// Import the core angular services.\nimport { Injectable } from \"@angular/core\";\nimport { get } from 'scriptjs';\n\ndeclare var Rutter: any;\n\n@Injectable({\n\tprovidedIn: \"root\"\n})\nexport class NgRutterServiceOptions {\n\tpublic PUBLIC_API_KEY: string = '';\n}\n\n@Injectable({\n\tprovidedIn: \"root\"\n})\nexport class NgRutterService {\n \n\tpublic options: NgRutterServiceOptions;\n\turl = 'https://unpkg.com/@rutter/rutter-link@latest';\n\n\tloadRutter(onSuccess, onLoad, onExit) {\n\n\t\tvar rutterInstance = Rutter.create({\n\t\t\tpublicKey: this.options.PUBLIC_API_KEY,\n\t\t\tonSuccess: function (publicToken) {\n\t\t\t\tonSuccess(publicToken)\n\t\t\t},\n\t\t\tonLoad: onLoad(),\n\t\t\tonExit: onExit(),\n\t\t})\n\t\t\t\n\t\trutterInstance.open();\n\t}\n\n\tsetup() {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tget(this.url, () => {\n\t\t\t\tresolve()\n\t\t\t});\n\t\t})\n\t}\n\t\n\tconstructor( options: NgRutterServiceOptions ) {\n\t\tthis.options = options;\n\t}\n}","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { NgRutterService } from './ng-rutter.service';\n\n@Component({\n  selector: 'ng-rutter',\n  template: `<div class=\"btn\" (click)=\"load()\" \n[style.background-color]=\"backgroundColor\"\n[style.color]=\"color\"\n\n> {{ text }} </div>`,\n  styles: [`.btn{display:inline-block;font-weight:400;text-align:center;white-space:nowrap;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border:1px solid transparent;padding:.375rem .75rem;font-size:1rem;line-height:1.5;border-radius:.25rem;position:relative;color:#fff;background-color:#007bff;font-family:Lato,sans-serif!important;cursor:pointer}`]\n})\n\nexport class NgRutterComponent implements OnInit {\n  @Input() text = 'Log in';\n  @Input() backgroundColor = '#000';\n  @Input() color = '#FFF';\n\n  @Output() onSuccess = new EventEmitter<string>();\n  @Output() onLoad = new EventEmitter();\n  @Output() onExit = new EventEmitter();\n\n  load() {\n    this.rutterService.loadRutter((publicToken) => {\n      this.onSuccess.emit(publicToken)\n    }, () => {\n      this.onLoad.emit()\n    }, () => {\n      this.onExit.emit()\n    });\n  }\n  \n  ngOnInit() {\n    this.rutterService.setup()\n  }\n\n  constructor(private rutterService: NgRutterService) {}\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgRutterComponent } from './ng-rutter.component';\nimport { InjectionToken } from \"@angular/core\";\nimport { NgRutterServiceOptions, NgRutterService } from './ng-rutter.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  providers: [\n\tNgRutterService\n],\n  declarations: [\n    NgRutterComponent\n  ],\n  exports: [\n\tNgRutterComponent,\n  ]\n})\nexport class NgRutterModule {\n\n  static forRoot( options?: ModuleOptions ) : ModuleWithProviders {\n \n\t\treturn({\n\t\t\tngModule: NgRutterModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: FOR_ROOT_OPTIONS_TOKEN,\n\t\t\t\t\tuseValue: options\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tprovide: NgRutterServiceOptions,\n\t\t\t\t\tuseFactory: provideMyServiceOptions,\n\t\t\t\t\tdeps: [ FOR_ROOT_OPTIONS_TOKEN ]\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n }\n\n\n// I define the shape of the optional configuration data passed to the forRoot() method.\nexport interface ModuleOptions {\n  PUBLIC_API_KEY?: string;\n}\n\nexport var FOR_ROOT_OPTIONS_TOKEN = new InjectionToken<ModuleOptions>( \"forRoot() MyService configuration.\" );\n\nexport function provideMyServiceOptions( options?: ModuleOptions ) : NgRutterServiceOptions {\n \n\tvar serviceOptions = new NgRutterServiceOptions();\n\tif ( options ) {\n \n\t\tif ( typeof( options.PUBLIC_API_KEY ) === \"string\" ) {\n\t\t\tserviceOptions.PUBLIC_API_KEY = options.PUBLIC_API_KEY;\n\t\t}\n\t}\n \n\treturn( serviceOptions );\n}"],"names":[],"mappings":"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"}
